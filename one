
# -*- coding: utf-8 -*-
import cv2
import numpy as np


def main():
    # 1.  захват видео
    cap = cv2.VideoCapture(0)
    # 2. Читать картинки в цикле
    while cap.isOpened():

        ret, frame = cap.read()
        # img = cv2.resize(frame, (1000, 600))
        img=frame
        height, width = img.shape[:2]
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        cv2.imshow('img', gray)


        # #Детектор границ Кенни
        # canny = cv2.Canny(gray, 50, 100)
        # cv2.imshow('img', canny)

#Преобразование Хафа - классический алгоритм обнаружения прямых линий.
        # lines = cv2.HoughLinesP(canny, 1, np.pi / 180, 30, minLineLength=30, maxLineGap=20)
        # lines = lines[:, 0, :]
        # for x1, y1, x2, y2 in lines:
        #     cv2.line(img, (x1, y1), (x2, y2), (0, 255, 0), 1)
        # cv2.imshow('img', img)




        # hsv_min = np.array((0, 54, 5), np.uint8)
        # hsv_max = np.array((187, 255, 253), np.uint8)
        # hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)  # меняем цветовую модель с BGR на HSV
        # # thresh = cv2.inRange(hsv, hsv_min, hsv_max)  # применяем цветовой фильтр
        # ret, thresh = cv2.threshold(gray, 127, 255, 0)
        # contours0, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

        #  # перебираем все найденные контуры в цикле
        # for cnt in contours0:
        #     rect = cv2.minAreaRect(cnt)  # пытаемся вписать прямоугольник
        #     box = cv2.boxPoints(rect)  # поиск четырех вершин прямоугольника
        #     box = np.int0(box)  # округление координат
        #     area = int(rect[1][0] * rect[1][1])  # вычисление площади
        #     if area > 1000:
        #         cv2.drawContours(img, [box], 0, (255, 0, 0), 2)
        #     # cv2.drawContours(img, [box], 0, (255, 0, 0), 2)  # рисуем прямоугольни
        #     cv2.imshow('contours', img)  # вывод обработанного кадра в окно





#Комбинированный детектор углов и краев
        # dst = cv2.cornerHarris(gray, 2, 3, 0.04)
        # img[dst > 0.01 * dst.max()] = [0, 0, 255]
        # cv2.imshow("Image origin", img)
        # cv2.imshow("frame", dst)
        # cv2.imshow("Canny", img)
        # cv2.imshow("Hough_line", img)
        # Функция HoughLinesP ()


        key = cv2.waitKey(1)

        if key == 27: # кнопка esc
            break

    # 3. Выпуск ресурса
    cap.release()
    cv2.destroyAllWindows()


if __name__ == '__main__':
    main()
